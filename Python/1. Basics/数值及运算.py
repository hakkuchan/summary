""" 1. 数值类型概述

    (1) int（整型）
        · int(num) 创建int型数值
        · Python不限制int型数值大小

    (2) float（浮点型）
        · float(num) 创建float型数值
        · float型数值最多有17位有效数字
        · float型存在精度误差，例如：4.1 + 2.1 == 6.2 >>> False，
          因此，比较两个float数值是否相等，应该采用思路：两者差值是否小于一个接近0的数

    (3) 复数类型
        · Python 中用 j 表示虚数，例如：3 + 2j
        · 常见复数运算和运算库 cmath 需要使用时再查
"""



""" 2. 数的进制
        
    · n进制表示用 n 个不同符号来表示数，例如二进制或十进制分别是用 0，1 两个符号或 0 ~ 9 九个符号表示数字

    · 二进制（binary）数前缀：0b  例如：0b10110111
      八进制（octal）数前缀：0o  例如：0o557
      十六进制（hexadecimal）数前缀：0x  例如：0x16f 

    · 二进制转十进制：0b101 → 1*2^2 + 0*2^1 + 1*2^0 = 5
      其它进制转十进制的方法以此类推

    · 十进制转二进制：用十进制数不断除以2，先得到的余数往后放，后得到的余数往前放，排列出的就是二进制数
      例如：十进制数4，先除以2，商2余0；2再除以2，商1余0；1再除以2，商0余1，所以二进制数为 100
"""

# 例：进制转化函数
print(bin(5))   # 十 → 二
print(oct(10))  # 十 → 八
print(hex(17))  # 十 → 十六
print(int('0b11000',2))  # 二 → 十



""" 3. 数值（非复数）运算 """

''' (1) 简单运算:
    · 加(+)、减(-)、乘(*)、除(/)、乘方（**）
    · 整除（//）：5 // 2 = 2
    · 取余（%）：5 % 2 = 1
'''


''' (2) 内置运算函数 '''
print(divmod(5, 2))       # 同时整除和取余  >>> (2, 1)
print(abs(-1.234))        # 取绝对值  >>> 1.234
print(round(51.234, 2))   # 四舍五入至小数点后两位 >>> 51.23
print(round(51.234, -2))  # 四舍五入至百位  >>> 100.0


''' (3) math模块 (注：math中所有函数的返回值都是float型) '''
import math 

# 特殊常数
e = math.e
pi = math.pi

# 常用计算
print(math.factorial(5)) # 返回5的阶乘  >>> 120
print(math.log(e**3))    # 求对数 (e为底数)  >>> 3
print(math.log(81, 9))   # 求对数 (3为底数)  >>> 2 
print(math.log2(16))     # 求对数 (2为底数)  >>> 4
print(math.log10(100))   # 求对数 (10为底数) >>> 2
print(math.trunc(2.9))   # 返回整数部分 >>> 2
print(math.ceil(1.2))    # 返回不小于num的最小整数 >>> 2
print(math.floor(10.9))  # 返回 ≦ num的最大整数  >>> 10
print(math.gcd(17,51))   # 返回两个数的最大公约数 >>> 17

# 其余运算（如三角函数、双曲函数等）见math文档