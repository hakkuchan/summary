""" · 线性代数最基本、最重要的运算只有两个：加法 和 乘法(主要指叉乘) 

    · 目录
    |
    |—— 1. 加法
    |
    |—— 2. 乘法
        |
        |—— 2.1 叉乘
        |
        |—— 2.2 点乘
        |
        |—— 2.3 数乘
"""

import numpy as np

""" 1. 加法 (对应元素相加) """
A = np.matrix([[1,2,3,4], [5,6,7,8]])
B = np.matrix([[1,2,3,4], [5,6,7,8]])
print(A+B)



""" 2. 乘法 """
''' 2.1 叉乘 (最重要) '''
# Toy matrix
A = np.matrix([[1,2,3,4], [5,6,7,8]]) # 2×4
B = np.matrix([[1,2], [3,4], [5,6], [7,8]]) # 4×2
C = np.matrix([[1,2], [3,4], [5,6], [7,8]]) # 4×2

# (1) 要求：前一个矩阵列数等于后一个矩阵行数
print(A.shape) # >>> (2,4)
print(B.shape) # >>> (4,2)
print((A@B).shape) # >>> (2,2)

# (2) 满足分配律：A(B+C) = AB+AC
print(A@(B+C) == (A@B + A@C))

# (3) 满足结合律：A(BC) = (AB)C'''
D = C.T
print(A@(B@D) == (A@B)@D)

# (4) 大多数情况下不满足交换律： AB ≠ BA

# (5) 转置：(AB)^T = (A^T)(B^T)
print((A@B).T == (B.T@A.T))


''' 2.2 点乘 (对应元素相乘) '''
A = np.array([[1,2,3],[4,5,6]])
B = np.array([[2,2,2],[2,2,2]])
print(A*B) 
# 如果 A、B 为 numpy的 array类型，A*B表示点乘 
# 如果 A、B 为 numpy的 matrix类型，A*B表示叉乘


''' 2.3 数乘 (常数×每个元素) '''
A = np.array([[1,2,3],[4,5,6]])
print(0*A)